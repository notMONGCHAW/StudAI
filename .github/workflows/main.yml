name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    environment:
      name: testing

    strategy:
      matrix:
        python-version: ['3.9']

    env:
      DATABASE_USERNAME: ${{ secrets.DB_USERNAME }}
      DATABASE_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DATABASE_HOST: ${{ secrets.DB_HOST }}
      DATABASE_PORT: ${{ secrets.DB_PORT }}
      DATABASE_NAME: ${{ secrets.DB_NAME }}

    services:
      postgres:
        image: postgres:15
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: ${{ secrets.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}_test
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name : pulling git
        uses: actions/checkout@v3
      - name: intall python version 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: 'pip'
      - name: Install dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest
      - name: Run tests with pytest
        run: |
          # Set PYTHONPATH to include the parent directory for imports to work
          export PYTHONPATH=$PYTHONPATH:$(pwd)/../src
          pytest  # Run the tests
      

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Deploy to Production
      env:
        DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
      run: |
        curl -X POST "$DEPLOY_HOOK_URL"

